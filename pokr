int 0 af: 01c0, bc: 008a, de: 0000, hl: 6508, pc: 614a, sp: dff5 8853 (8860) -7
int 0 af: 1700, bc: 008a, de: 1710, hl: 6508, pc: 6153, sp: dff5 57329 (57316) +13
int 0 af: 9600, bc: 008a, de: 1086, hl: 6508, pc: 614e (614d), sp: dff5 62021 (62004) +17
int 0 af: fd00, bc: 008a, de: 09fc, hl: 6508, pc: 6150, sp: dff5 1169 (1156) +13
int 0 af: 0300, bc: 008a, de: 0371, hl: 6508, pc: 6152, sp: dff5 5857 (5844) +13
int 0 af: 5a00, bc: 008a, de: 1842, hl: 6508, pc: 6153, sp: dff5 10545 (10532) +13
int 0 af: b900, bc: 008a, de: 11b8, hl: 6508, pc: 614e (614d), sp: dff5 15237
int 0 af: 2f00, bc: 008a, de: 0b2e, hl: 6508, pc: 6150, sp: dff5 19921
int 0 af: 0400, bc: 008a, de: 04a3, hl: 6508, pc: 6152, sp: dff5 24609
int 0 af: 7b00, bc: 008a, de: 1972, hl: 6508, pc: 6153, sp: dff5 29297
int 0 af: fa00, bc: 008a, de: 12e8, hl: 6508, pc: 614e (614d), sp: dff5 33989
int 0 af: 5e00, bc: 008a, de: 0c5e, hl: 6508, pc: 6150, sp: dff5 38673
int 0 af: 0500, bc: 008a, de: 05d3, hl: 6508, pc: 6152, sp: dff5 43361
int 0 af: bb00, bc: 008a, de: 1aa3, hl: 6508, pc: 614f, sp: dff5 48049
int 0 af: 1400, bc: 008a, de: 1418, hl: 6508, pc: 6152 (6151), sp: dff5 52741
int 0 af: 8f00, bc: 008a, de: 0d8e, hl: 6508, pc: 614d, sp: dff5 57425
int 0 af: 0700, bc: 008a, de: 0704, hl: 6508, pc: 614e, sp: dff5 62113
int 0 af: 7a00, bc: 008a, de: 0079, hl: 6508, pc: 6151, sp: dff5 1265
int 0 af: 1500, bc: 008a, de: 1548, hl: 6508, pc: 6152 (6151), sp: dff5 5957

... company list
int 0 af: 0140, bc: 0015, de: 86c0, hl: ff40, pc: 20b5, sp: dff3 34701
                      ^^ should: count down every frame
                        reality: count down every 23 frames

DelayFrame::
; Wait for the next vblank interrupt.
; As a bonus, this saves battery.

DEF NOT_VBLANKED EQU 1

	ld a, NOT_VBLANKED
	ldh [hVBlankOccurred], a
.halt
	halt
	ldh a, [hVBlankOccurred]
	and a
	jr nz, .halt
	ret

DelayFrames::
; wait c frames
	call DelayFrame
	dec c
	jr nz, DelayFrames
	ret
